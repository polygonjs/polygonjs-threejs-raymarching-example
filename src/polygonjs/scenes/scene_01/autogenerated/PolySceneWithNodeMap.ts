import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { CopNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/CopNetwork";
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { HemisphereLightObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/HemisphereLight";
import { PerspectiveCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PerspectiveCamera";
// sop
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
// mat
import { RayMarchingBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/RayMarchingBuilder";
// cop
import { ImageEXRCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/ImageEXR";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/hemisphereLight1"): HemisphereLightObjNode;
  node(path: "/perspectiveCamera1"): PerspectiveCameraObjNode;
  node(path: "/perspectiveCamera1/events1"): EventsNetworkSopNode;
  node(
    path: "/perspectiveCamera1/events1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/raymarchedObject"): GeoObjNode;
  node(path: "/raymarchedObject/material1"): MaterialSopNode;
  node(path: "/raymarchedObject/MAT"): MaterialsNetworkSopNode;
  node(
    path: "/raymarchedObject/MAT/rayMarchingBuilder1"
  ): RayMarchingBuilderMatNode;
  node(path: "/raymarchedObject/sphere1"): SphereSopNode;
  node(path: "/COP"): CopNetworkObjNode;
  node(path: "/COP/imageEXR1"): ImageEXRCopNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "perspectiveCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--updateFromControlsMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--transform"?: ParamValueSerializedTypeMap["folder"];
  "raymarchedObject--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject--t"?: ParamValueSerializedTypeMap["vector3"];
  "raymarchedObject--t-tx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--t-ty"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--t-tz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--tx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--ty"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--tz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--r"?: ParamValueSerializedTypeMap["vector3"];
  "raymarchedObject--r-rx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--r-ry"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--r-rz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--rx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--ry"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--rz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--s"?: ParamValueSerializedTypeMap["vector3"];
  "raymarchedObject--s-sx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--s-sy"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--s-sz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--sx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--sy"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--sz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--scale"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "raymarchedObject--display"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-material1--group"?: ParamValueSerializedTypeMap["string"];
  "raymarchedObject-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "raymarchedObject-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "raymarchedObject-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "raymarchedObject-MAT-rayMarchingBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "raymarchedObject-MAT-rayMarchingBuilder1--maxSteps"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-MAT-rayMarchingBuilder1--maxDist"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--surfDist"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--normalsBias"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--center"?: ParamValueSerializedTypeMap["vector3"];
  "raymarchedObject-MAT-rayMarchingBuilder1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--centerx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--centery"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--centerz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "raymarchedObject-MAT-rayMarchingBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "raymarchedObject-MAT-rayMarchingBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--shadowDistanceMin"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--shadowDistanceMax"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--shadowDepthMin"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--shadowDepthMax"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--debug"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-MAT-rayMarchingBuilder1--debugMode"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-MAT-rayMarchingBuilder1--debugMinSteps"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-MAT-rayMarchingBuilder1--debugMaxSteps"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-MAT-rayMarchingBuilder1--debugMinDepth"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--debugMaxDepth"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-MAT-rayMarchingBuilder1--envTexture1"?: ParamValueSerializedTypeMap["node_path"];
  "raymarchedObject-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "raymarchedObject-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "raymarchedObject-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "raymarchedObject-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "raymarchedObject-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "raymarchedObject-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--url"?: ParamValueSerializedTypeMap["string"];
  "COP-imageEXR1--reload"?: ParamValueSerializedTypeMap["button"];
  "COP-imageEXR1--tencoding"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--encoding"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEXR1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEXR1--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEXR1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEXR1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEXR1--type"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEXR1--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
}
